import requests
import pandas as pd
import streamlit as st

# Configurar la p√°gina de Streamlit
st.set_page_config(page_title="Buscador de Lugares", layout="wide")

# T√≠tulo de la aplicaci√≥n
st.title("üìç Buscador de Lugares")

# Instrucciones en la barra lateral
with st.sidebar:
    st.header("üõ†Ô∏è Instrucciones")
    st.markdown("""
    1Ô∏è‚É£ **Obt√©n tu clave API de ValueSerp**  
    2Ô∏è‚É£ **Pega tu clave API en el cuadro de texto**  
    3Ô∏è‚É£ **Ingresa un t√©rmino de b√∫squeda (por ejemplo, 'pizza')**  
    4Ô∏è‚É£ **Presiona el bot√≥n para buscar lugares**  
    """)

# Funci√≥n para buscar lugares usando ValueSerp
def search_places(api_key, query):
    url = "https://api.valueserp.com/search"
    params = {
        "api_key": api_key,
        "search_type": "places",
        "q": query
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        results = data.get("results", [])
        return results
    else:
        st.error(f"‚ùå Error al buscar lugares: {response.status_code}")
        return []

# Interfaz principal
def main():
    # Campo para ingresar la clave API
    api_key = st.text_input("üîë Ingresa tu clave API de ValueSerp:", type="password")
    
    # Campo para ingresar el t√©rmino de b√∫squeda
    query = st.text_input("üîç Ingresa el t√©rmino de b√∫squeda (por ejemplo, 'pizza'):")
    
    # Bot√≥n para buscar lugares
    if st.button("Buscar Lugares"):
        if not api_key.strip():
            st.warning("‚ö†Ô∏è Por favor ingresa tu clave API.")
        elif not query.strip():
            st.warning("‚ö†Ô∏è Por favor ingresa un t√©rmino de b√∫squeda.")
        else:
            try:
                places = search_places(api_key, query)
                if places:
                    # Convertir los resultados en un DataFrame
                    df = pd.DataFrame(places)
                    st.success(f"‚úÖ Se encontraron {len(df)} lugares.")
                    st.dataframe(df, use_container_width=True)
                else:
                    st.warning("‚ùå No se encontraron lugares para la b√∫squeda ingresada.")
            except Exception as e:
                st.error(f"‚ö†Ô∏è Ocurri√≥ un error: {str(e)}")

if __name__ == "__main__":
    main()
